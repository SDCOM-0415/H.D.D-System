name: Build Application

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*' # 当推送以v开头的tag时触发
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write # 添加创建release的权限
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: requirements.windows.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.windows.txt

      - name: Build with PyInstaller
        run: |
          pyinstaller --name="HDD-System" --windowed --icon=Icon.ico --add-data="*.png;." --add-data="*.mp3;." --add-data="*.wav;." --add-data="*.ttf;." --add-data="Icon.ico;." Main.PY

      # 创建zip文件以便上传
      - name: Create ZIP archive
        run: |
          cd dist
          7z a -tzip HDD-System-Windows.zip HDD-System/

      # 如果是tag推送，则上传到Release
      - name: Upload Windows Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/HDD-System-Windows.zip
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build-macos:
    runs-on: macos-latest
    permissions:
      contents: write # 添加创建release的权限
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: requirements.macos.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.macos.txt

      - name: Build with PyInstaller
        run: |
          pyinstaller --name="HDD-System" --windowed --icon=Icon.ico --add-data="*.png:." --add-data="*.mp3:." --add-data="*.wav:." --add-data="*.ttf:." --add-data="Icon.ico:." Main.PY

      - name: Create DMG (macOS disk image)
        run: |
          # 安装create-dmg工具
          brew install create-dmg
          
          # 创建临时目录
          mkdir -p dmg_contents
          
          # 复制.app到临时目录
          cp -r dist/HDD-System.app dmg_contents/
          
          # 创建DMG文件
          create-dmg \
            --volname "HDD-System" \
            --volicon "Icon.ico" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon "HDD-System.app" 150 190 \
            --app-drop-link 450 190 \
            "HDD-System.dmg" \
            "dmg_contents/"

      # 上传macOS DMG到Release
      - name: Upload macOS DMG Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ./HDD-System.dmg
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false